clear; close;
addpath('C:\\Users\\yijundong\\Documents\\MATLAB\\lapack')
addpath('/h2/yijun/Documents/MATLAB/lapack')
%%
algos = {'DetCPQR',...
        'CPQR',...
        'CSCPQR',...
        'CPQRstream',...
        'CPQRstreamCUR',...
        ...
        'DetLUPP',...
        'LUPP',...
        'CSLUPP',...
        'LUPPstream',...
        ...
        'SVDDEIM',...
        'RSVDDEIM',...
        'CSSVDDEIM',...
        'RSVDDEIMstream',...
        ...
        'LUCP',...
        'ACA',...(stream)
        'CSLUCP',...(stream)
        ...
        'SVDLS',...
        'RSVDLS',...
        'CSSVDLS',...
        'RSVDLSstream'};
%% Dense matrix scaling
% Target: dense Gaussian PSD matrix
rank = 20;
m_max = 10000;
prob_sizes = (1:10)*1000;
amp = 2; 
len = 10;
sig = 1./(1:m_max); 
sig(1:len) = sig(1:len)*amp;
test_CUR_problem_size(rank, [], [], 'gpsd', prob_sizes, sig);
%% Sparse matrix scaling
% Target: sparse Laplacian of random weighted graph
rank = 20; 
nvertex = (1:10)*floor(2e3);
test_CUR_problem_size(rank, [], [], 'lap', nvertex);
%% load dense scaling data
clear; close;
tag = 'k20_dense-gspd_n20000';
para = load(sprintf('probsizes_%s.mat',tag));
time = load(sprintf('time_%s.mat',tag));
prob_sizes = para.problem_sizes;
% ns = para.num_V;
k = para.rank;

%% dense scaling plot
subplot(1,2,1)
% plot(prob_sizes, time.RSVDDEIM, 'o-', 'LineWidth', 1.5)
hold on
% plot(prob_sizes, time.CSSVDDEIM, 'o-', 'LineWidth', 1.5)
plot(prob_sizes, time.CSSVDDEIMstream, 'o-', 'LineWidth', 1.5)
plot(prob_sizes, time.LUCP, 's-', 'LineWidth', 1.5)
plot(prob_sizes, time.ACA, 's-', 'LineWidth', 1.5)
plot(prob_sizes, time.CSLUCP, 's-', 'LineWidth', 1.5)
plot(prob_sizes, time.CPQR, '^-', 'LineWidth', 1.5)
% plot(prob_sizes, time.CSCPQR, '^-', 'LineWidth', 1.5)
plot(prob_sizes, time.CSCPQRstream, '^-', 'LineWidth', 1.5)
% plot(prob_sizes, time.RSVDLS, 'd-', 'LineWidth', 1.5)
% plot(prob_sizes, time.CSSVDLS, 'd-', 'LineWidth', 1.5)
plot(prob_sizes, time.CSSVDLSstream, 'd-', 'LineWidth', 1.5)
hold off
xlim([prob_sizes(1) prob_sizes(end)])
xlabel('$m$','interpreter','latex')
ylabel('time / sec','interpreter','latex')
legend(...'RSVD-DEIM',...
    ...'CSSVD-DEIM',...
    'Stream-SVD-DEIM',...
    'Det-LUCP',...
    'LGS-ACA',...
    'CS-LUCP',...
    'Rand-CPQR',...
    ...'CS-CPQR',...
    'Stream-CPQR',...
    ...'RSVD-LS',...
    ...'CSSVD-LS',...
    'Stream-SVD-LS',...
    'interpreter','latex')
title(sprintf('$m \\times m$ Gaussian SPD matrix with rank $k=%d$ runtime overview',k),...
    'interpreter','latex')
set(gca,'FontSize',12)

subplot(1,2,2)
plot(prob_sizes, time.RSVDDEIM, 'o-', 'LineWidth', 1.5)
hold on
plot(prob_sizes, time.CSSVDDEIM, 'o-', 'LineWidth', 1.5)
% plot(prob_sizes, time.LUCP, 's-', 'LineWidth', 1.5)
% plot(prob_sizes, time.ACA, 's-', 'LineWidth', 1.5)
plot(prob_sizes, time.CSLUCP, 's-', 'LineWidth', 1.5)
plot(prob_sizes, time.CPQR, '^-', 'LineWidth', 1.5)
plot(prob_sizes, time.CSCPQR, '^-', 'LineWidth', 1.5)
% plot(prob_sizes, time.CSCPQRstream, '^-', 'LineWidth', 1.5)
plot(prob_sizes, time.RSVDLS, 'd-', 'LineWidth', 1.5)
plot(prob_sizes, time.CSSVDLS, 'd-', 'LineWidth', 1.5)
hold off
xlim([prob_sizes(1) prob_sizes(end)])
xlabel('$n$','interpreter','latex')
ylabel('time / sec','interpreter','latex')
legend('RSVD-DEIM',...
    'CSSVD-DEIM',...
    ...'Det-LUCP',...
    ...'LGS-ACA',...
    'CS-LUCP',...
    'Rand-CPQR',...
    'CS-CPQR',...
    ...'Stream-CPQR',...
    'RSVD-LS',...
    'CSSVD-LS',...
    'interpreter','latex')
title(sprintf('$n \\times n$ Gaussian SPD matrix with rank $k=%d$ selected runtime',k),...
    'interpreter','latex')
set(gca,'FontSize',12)

%% dense scaling plot: stream
% subplot(1,2,1)
plot(prob_sizes, time.CSSVDDEIMstream, 'o-', 'LineWidth', 1.5)
hold on
plot(prob_sizes, time.CSCPQRstream, '^-', 'LineWidth', 1.5)
plot(prob_sizes, time.CSSVDLSstream, 'd-', 'LineWidth', 1.5)
hold off
xlim([prob_sizes(1) prob_sizes(end)])
xlabel('$m$','interpreter','latex')
ylabel('time / sec','interpreter','latex')
legend('Stream-SVD-DEIM',...
       'Stream-CPQR',...
       'Stream-SVD-LS',...
       'interpreter','latex')
title(sprintf('$m \\times m$ Gaussian SPD matrix with rank $k=%d$ runtime overview',k),...
    'interpreter','latex')
set(gca,'FontSize',12)

%% load sparse scaling data
clear; close;
% tag = 'k100_sparse-laplacian_n100000';
tag = 'k200_sparse-laplacian_n200000';
para = load(sprintf('probsizes_%s.mat',tag));
time = load(sprintf('time_%s.mat',tag));
k = para.rank;
ns = para.num_V;
ms = para.num_E;

%% sparse scaling plot
subplot(1,2,1)
plot(ns, time.RSVDDEIM, 'o-', 'LineWidth', 1.5)
hold on
plot(ns, time.CSSVDDEIM, 'o-', 'LineWidth', 1.5)
plot(ns, time.LUCP, 's-', 'LineWidth', 1.5)
plot(ns, time.ACA, 's-', 'LineWidth', 1.5)
plot(ns, time.CSLUCP, 's-', 'LineWidth', 1.5)
plot(ns, time.CPQR, '^-', 'LineWidth', 1.5)
plot(ns, time.CSCPQR, '^-', 'LineWidth', 1.5)
% plot(ns, time.CSCPQRstream, '^-', 'LineWidth', 1.5)
plot(ns, time.RSVDLS, 'd-', 'LineWidth', 1.5)
plot(ns, time.CSSVDLS, 'd-', 'LineWidth', 1.5)
hold off
xlabel('$n$ with $m=5n$','interpreter','latex')
ylabel('time / sec','interpreter','latex')
legend('RSVD-DEIM',...
    'CSSVD-DEIM',...
    'Det-LUCP',...
    'LGS-ACA',...
    'CS-LUCP',...
    'Rand-CPQR',...
    'CS-CPQR',...
    ...'Stream-CPQR',...
    'RSVD-LS',...
    'CSSVD-LS',...
    'interpreter','latex')
title(sprintf('Random weighted Laplacian $|V|=n,|E|=m$,$k=%d$ runtime overview',k),...
    'interpreter','latex')
set(gca,'FontSize',12)

subplot(1,2,2)
plot(ns, time.RSVDDEIM, 'o-', 'LineWidth', 1.5)
hold on
plot(ns, time.CSSVDDEIM, 'o-', 'LineWidth', 1.5)
% plot(ns, time.LUCP, 's-', 'LineWidth', 1.5)
plot(ns, time.ACA, 's-', 'LineWidth', 1.5)
% plot(ns, time.CSLUCP, 's-', 'LineWidth', 1.5)
plot(ns, time.CPQR, '^-', 'LineWidth', 1.5)
plot(ns, time.CSCPQR, '^-', 'LineWidth', 1.5)
% plot(ns, time.CSCPQRstream, '^-', 'LineWidth', 1.5)
plot(ns, time.RSVDLS, 'd-', 'LineWidth', 1.5)
plot(ns, time.CSSVDLS, 'd-', 'LineWidth', 1.5)
hold off
xlabel('$n$ with $m=5n$','interpreter','latex')
ylabel('time / sec','interpreter','latex')
legend('RSVD-DEIM',...
    'CSSVD-DEIM',...
    ...'Det-LUCP',...
    'LGS-ACA',...
    ...'CS-LUCP',...
    'Rand-CPQR',...
    'CS-CPQR',...
    ...'Stream-CPQR',...
    'RSVD-LS',...
    'CSSVD-LS',...
    'interpreter','latex')
title(sprintf('Random weighted Laplacian $|V|=n,|E|=m$,$k=%d$ selected runtime',k),...
    'interpreter','latex')
set(gca,'FontSize',12)

%% sparse scaling plot: stream
% subplot(1,2,1)
rng=2:length(ns);
plot(ns(rng), time.CSSVDDEIMstream(rng), 'o-', 'LineWidth', 1.5)
hold on
plot(ns(rng), time.CSCPQRstream(rng), '^-', 'LineWidth', 1.5)
plot(ns(rng), time.CSSVDLSstream(rng), 'd-', 'LineWidth', 1.5)
hold off
xlabel('$n$ with $m=5n$','interpreter','latex')
ylabel('time / sec','interpreter','latex')
legend('Stream-SVD-DEIM',...
       'Stream-CPQR',...
       'Stream-SVD-LS',...
       'interpreter','latex')
title(sprintf('Random weighted Laplacian $|V|=n,|E|=m$,$k=%d$ runtime overview',k),...
    'interpreter','latex')
set(gca,'FontSize',12)
